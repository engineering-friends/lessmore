import random

from typing import Optional

from discord_to_telegram_forwarder.send_discord_post_to_telegram.get_shortened_url_from_tiny_url import (
    get_shortened_url_from_tiny_url,
)
from discord_to_telegram_forwarder.send_discord_post_to_telegram.request_emoji_from_openai import (
    request_emoji_from_openai,
)
from discord_to_telegram_forwarder.send_discord_post_to_telegram.tests.messages import test_messages
from inline_snapshot import snapshot

from lessmore.utils.backlog.run_inline_snapshot_tests import run_inline_snapshot_tests


TEMPLATE = """#{channel_name}
{emoji} **"{title}"** by {author}
{body}
[‚Üí –∫ –ø–æ—Å—Ç—É]({url}){apple_link}"""


def format_telegram_message_text(
    post_author_name: str,
    post_body: str,
    post_forum_channel_name: str,
    post_title: str,
    post_url: str,
    add_inner_shortened_url: bool,
    emoji: Optional[str] = None,
):
    # - Get emoji from openai

    if not emoji:
        emoji = request_emoji_from_openai(f"{post_forum_channel_name} {post_title} {post_body}")

    # - Make discord schema and shorten it to make it https:// with redirection to discord://

    inner_shortened_url = (
        get_shortened_url_from_tiny_url(post_url.replace("https", "discord")) if add_inner_shortened_url else ""
    )

    # - Format message for telegram

    return TEMPLATE.format(
        channel_name=post_forum_channel_name.replace("-", "_"),
        emoji=emoji,
        title=post_title,
        author=f"{post_author_name}",
        body=("\n" + post_body[:3000] + ("" if len(post_body) < 3000 else "...")) + "\n" if post_body else "",
        url=post_url,
        apple_link=f"\n[‚Üí –∫ –ø–æ—Å—Ç—É –Ω–∞ apple-—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö]({inner_shortened_url})" if inner_shortened_url else "",
    )


def test_single():
    print(
        format_telegram_message_text(
            post_forum_channel_name="channel_name",
            post_title="–ö–∞–∫ –æ–±—Ö–æ–¥–∏—Ç—å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç –≤ ChatGPT –¥–ª—è –±–æ–ª—å—à–∏—Ö —Ç–∞—Å–æ–∫?",
            post_body="–í–µ—Ä–æ—è—Ç–Ω–æ —É –∫–æ–≥–æ-—Ç–æ –∏–∑ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å —Ö–æ—Ä–æ—à–∏–µ –ø—Ä–æ–º–ø—Ç—ã –∏–ª–∏ —Ç—É–ª–∑—ã. –í —á–∞—Å—Ç–Ω–æ—Å—Ç–∏, —Ö–æ—á–µ—Ç—Å—è –Ω–∞—É—á–∏—Ç—å—Å—è –±–∞—Ç—á–∏—Ç—å - –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å –±–æ–ª—å—à–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–¥–Ω–æ—Ç–∏–ø–Ω—ã—Ö –¥–∂–æ–±–æ–≤",
            post_author_name="Mark Lidenberg",
            post_url="https://www.youtube.com/watch?v=dQw4w9WgXcQ&ab_channel=RickAstley",
            add_inner_shortened_url=False,
            emoji="üìù",
        )
    )


def test_batch():
    assert [format_telegram_message_text(**message) for message in test_messages.values()] == snapshot(
        [
            '#channel_name\nüí¨ **"Basic"** by Mark Lidenberg\n\nThis is my body!\n\n[‚Üí –∫ –ø–æ—Å—Ç—É](https://www.youtube.com/watch?v=dQw4w9WgXcQ&ab_channel=RickAstley)\n[‚Üí –∫ –ø–æ—Å—Ç—É –Ω–∞ apple-—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö](https://tinyurl.com/2bub4s6g)',
            '#channel_name\nüì∫ **"No body"** by Mark Lidenberg\n\n\n[‚Üí –∫ –ø–æ—Å—Ç—É](https://www.youtube.com/watch?v=dQw4w9WgXcQ&ab_channel=RickAstley)\n[‚Üí –∫ –ø–æ—Å—Ç—É –Ω–∞ apple-—É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö](https://tinyurl.com/2bub4s6g)',
        ]
    )


if __name__ == "__main__":
    # test_single()
    run_inline_snapshot_tests()
