import os
import time

import emoji

from openai import OpenAI

from lessmore.utils.functional.skip_duplicates import skip_duplicates


REACTION_EMOJIS = [
    "üî•",
    "üëç",
    "‚úçÔ∏è",
    "üòÅ",
    "üëÄ",
    "üò¢",
    "üëæ",
    "‚ù§Ô∏è",
    "ü§ù",
    "üéâ",
    "üôè",
    "üíØ",
    "ü•∞",
    "üëè",
    # "ü§î",
    "ü§Ø",
    "üò±",
    "ü§¨",
    "ü§©",
    "üïäÔ∏è",
    "ü•¥",
    "üòç",
    "üê≥",
    "üåö",
    "üå≠",
    "ü§£",
    "‚ö°",
    "üçå",
    "üèÜ",
    "üíî",
    "ü§®",
    "üçì",
    "üíã",
    "üòà",
    "üò¥",
    "üôà",
    "üòá",
    "ü§ó",
    "ü´°",
    "üéÑ",
    "‚òÉÔ∏è",
    "üÜí",
    "ü¶Ñ",
    "ü§∑",
]


def request_reaction_emojis_from_openai(text: str, limit: int = 3) -> str:
    """Returns emojis as a string (e.g. "üëç")"""

    # - Init client

    client = OpenAI()

    # - Get response text

    response = client.chat.completions.create(
        model="gpt-3.5-turbo",
        messages=[
            {
                "role": "system",
                "content": """
                Your role as an Emoji Reactor is to react to the text with emojis.
                Focus on the core ideas and sentiments of the text that make it stand out. 
                
                Use ONLY emojis from the list below:
                üî• üëç ‚úçÔ∏è üòÅ üëÄ üò¢ üëæ ‚ù§Ô∏è ü§ù üéâ üôè üíØ ü•∞ üëè ü§Ø üò± ü§¨ ü§© üïäÔ∏è ü•¥ üòç üê≥ üåö üå≠ ü§£ ‚ö° üçå üèÜ üíî ü§® üçì üíã üòà üò¥ üôà üòá ü§ó ü´° üéÑ ‚òÉÔ∏è üÜí ü¶Ñ ü§∑
                """,
            },
            {
                "role": "user",
                "content": """‚è≥ –ù–µ –≤—ã–≤–æ–∂—É —Ç–µ–∫—É—á–∫—É, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–º–æ–≥–∏—Ç–µ —Ä–∞–∑–≥—Ä–µ—Å—Ç–∏. by Petr Lavrov (https://www.notion.so/Petr-Lavrov-578c90b40fb642809540b6c8794c81dd)

–ü–æ–±—É–¥—å—Ç–µ –º–æ–∏–º–∏ —Ä—É–∫–∞–º–∏, –≥–æ–ª–æ–≤–æ–π, –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–æ—Ä–æ–º –∏–ª–∏ –ø—Ä–æ—Å—Ç–æ —Ä—è–¥–æ–º –ø–æ—Å—Ç–æ–π—Ç–µ. –ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤—Ä–µ–º—è / —Å–∏–ª—ã / –∂–µ–ª–∞–Ω–∏–µ.

–ü–æ–∑–≤–æ–Ω–∏—Ç–µ / –∑–∞—Å—Ç–∞–≤—å—Ç–µ / —Å–¥–µ–ª–∞–π—Ç–µ –∑–∞ –º–µ–Ω—è

–•–æ—á—É –ø–æ –∫–∞–∂–¥–æ–π –∑–∞–¥–∞—á–µ - –ª–∏–±–æ —Å–¥–µ–ª–∞—Ç—å, –ª–∏–±–æ –ø—Ä–∏–Ω—è—Ç—å —Ä–µ—à–µ–Ω–∏–µ –Ω–µ –¥–µ–ª–∞—Ç—å / –æ—Ç–ª–æ–∂–∏—Ç—å, –ª–∏–±–æ –∫–∞–∫-—Ç–æ –æ—Ä–≥–∞–Ω–∏–∑–æ–≤–∞—Ç—å —á—Ç–æ–±—ã –æ–Ω–æ —Å–∞–º–æ / –∑–∞ –º–µ–Ω—è / –±–µ–∑ –º–µ–Ω—è —Å–¥–µ–ª–∞–ª–æ—Å—å.

–ö–æ–Ω–∫—Ä–µ—Ç–Ω–æ, —á—Ç–æ —É–∂–µ –¥–æ–ª–≥–æ –≤–∏—Å–∏—Ç:
- —Ä–∞–∑—É–∑–Ω–∞—Ç—å –ø—Ä–æ–¥–ª—è—Ç –ª–∏ –Ω–∞–º –ø–µ—Ä–º–∏—Ç –µ—Å–ª–∏ –≤—ã–¥–∞–≤–∞–ª –¶—é—Ä–∏—Ö –∞ —Ä–∞–±–æ—Ç–æ–¥–∞—Ç–µ–ª—å –≤ –¶—É–≥–µ
- –Ω–µ–æ—Ç–≤–µ—á–µ–Ω–Ω—ã–µ –ø–∏—Å—å–º–∞ —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å–æ —Å–º–µ–Ω–æ–π —Ä–∞–±–æ—Ç—ã. –°—Ç—Ä–∞—Ö–æ–≤–∫–∞, –ø–µ–Ω—Å–∏—è
- —Å–æ–±—Ä–∞—Ç—å –∏ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–æ–∫—É–º–µ–Ω—Ç—ã –ø–æ –Ω–∞–ª–æ–≥–∞–º, –¥–µ–¥–ª–∞–π–Ω –∫–æ–≥–¥–∞-—Ç–æ –≤ —Å–µ–Ω—Ç—è–±—Ä–µ? –ò–ª–∏ –≤ –∞–≤–≥—É—Å—Ç–µ?
""",
            },
            {
                "role": "assistant",
                "content": """ü§Øüò±ü§∑""",
            },
            {
                "role": "user",
                "content": f"### Text\n{text}",
            },
        ],
    )  # sample answer: {"id":"chatcmpl-7mS5ErOokrcpg33WsJKrZ6rnhLazt","object":"chat.completion","created":1691782052,"model":"gpt-3.5-turbo-0613","choices":[{"index":0,"message":{"role":"assistant","content":"‚òî"},"finish_reason":"stop"}],"usage":{"prompt_tokens":44,"completion_tokens":2,"total_tokens":46}} # pragma: allowlist secret
    response_text = response.choices[0].message.content

    # - Filter emojis

    emojis = [letter for letter in response_text if emoji.is_emoji(letter)]

    # - Remove duplicates

    emojis = list(skip_duplicates(emojis))

    # - Filter non-reaction emojis

    emojis = [_emoji for _emoji in emojis if _emoji in REACTION_EMOJIS]

    if not emojis:
        emojis = ["üëÄ"]

    # - Return the first one

    return "".join(emojis[:limit])


def test():
    for text in [
        """–∫ —Å–ª–æ–≤—É –ø—Ä–æ AI Search –≤ —Å–≤–æ–∏—Ö —Ñ–∞–π–ª–∞—Ö by Petr Lavrov

https://www.theverge.com/2023/6/21/23767248/dropbox-ai-dash-universal-search""",
        """–ê –≤—Å–µ –∑–Ω–∞—é—Ç, —á—Ç–æ –∑–Ω–∞—á–∏—Ç –≤–æ—Ç —ç—Ç–æ —á–∏—Å–ª–æ –≤ —Ñ–æ—Ä–≤–∞—Ä–¥–µ –ø–æ—Å—Ç–∞?""",
        """–ü–æ–ø—Ä–æ–±–æ–≤–∞–ª DALLE-3 (—á–µ—Ä–µ–∑ Bing), –æ—á–µ–Ω—å –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å by Petr Lavrov

https://www.bing.com/images/create/
—Å Midjourney –≥–æ—Ä–∞–∑–¥–æ —Å–ª–æ–∂–Ω–µ–µ –±—ã–ª–æ —Å–≥–µ–Ω–µ—Ä–∏—Ç—å —Ç–æ —á—Ç–æ —Ö–æ—á–µ—Ç—Å—è
""",
        """–ò–ª—å—è, –∞ –º–Ω–µ –∑–∞—à–µ–ª birthdaycountbot :) –°–æ–∑–¥–∞–µ—Ç –¥–æ–±—Ä–æ–µ –æ—â—É—â–µ–Ω–∏–µ sense of urgency by Mark Lidenberg

–ü–æ–∫–∞ –æ—Å—Ç–∞–≤–ª—é :) 

https://t.me/birthdaycountbot

–ò–ª—å—è (Ilya)""",
        """–ö—Ç–æ –¥–µ–ª–∞–ª —Å–µ–±–µ –≤—Ç–æ—Ä—É—é –ª–∏—á–Ω–æ—Å—Ç—å? –ö–∞–∫ –ø—Ä–∞–≤–∏–ª—å–Ω–æ –ø–æ–¥–≥–æ—Ç–æ–≤–∏—Ç—å —Å–µ–±—è –∫ –∑–∞–ª—è–≥–∞–Ω–∏—é –Ω–∞ –¥–Ω–æ? by Georgy Gorbachev

–Ø —Å–æ–±—Ä–∞–ª –æ–ø—Ä–µ–¥–µ–ª—ë–Ω–Ω—ã–π –Ω–∞–±–æ—Ä –ø—Ä–µ–¥–º–µ—Ç–æ–≤ –¥–ª—è –≤—Ç–æ—Ä–æ–π –∏–Ω–æ—Å—Ç—Ä–∞–Ω–Ω–æ–π –ª–∏—á–Ω–æ—Å—Ç–∏, –æ–¥–Ω–∞–∫–æ –∫–∞–∫ –±—É–¥—Ç–æ —ç—Ç–æ–≥–æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ. –•–æ—á—É –ø–æ–¥–µ–ª–∏—Ç—å—Å—è –∏ –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è)))

–¢–∞–∫–∂–µ –¥–µ–ª–∞—é —Å–µ–±–µ advanved VPN cluster —Å–≤–æ–∏–º–∏ —Ä—É–∫–∞–º–∏ –¥–ª—è –≤–ø–Ω–∞ –∫–∞–∫ –≤ –†–§ —Ç–∞–∫ –∏ –≤–æ –≤–Ω–µ –¥–ª—è —Å–µ–±—è –∏ —Å–µ–º—å–∏ –ø–æ–¥ –ø—Ä–∏–∫—Ä—ã—Ç–∏–µ–º –∏–≥—Ä–æ–≤–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞, –ø—Ä–æ–±–∏–≤–∞—é—â–∏–π –±—É–¥—É—â—É—é –±–ª–æ–∫–∏—Ä–æ–≤–∫—É –¥–∏–ø–∏–∞–π—è–º–∏ –±–æ–ª—å—à–∏–Ω—Å—Ç–≤–æ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö VPN-–ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤. –û–±—Å—É–¥–∏–ª –±—ã —ç—Ç–æ –µ—Å–ª–∏ –æ—Å—Ç–∞–Ω–µ—Ç—Å—è –≤—Ä–µ–º—è)""",
        """ –•–æ—á—É –æ–±—Å—É–¥–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—ã  –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–∏ –∏ –∫–ª–∞—Å—Å–Ω—ã–µ —Ñ–∏—á–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —è–∑—ã–∫–æ–≤ by –ò–ª—å—è (Ilya)

–†–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞—é –ø—Ä–æ—Ç–æ—Ç–∏–ø –º–æ–±–∏–ª—å–Ω–æ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è, —è–≤–ª—è—é—â–µ–≥–æ—Å—è –ª—É—á—à–µ–π –≤–µ—Ä—Å–∏–µ–π anki –∏ —Ö–æ—á—É —É—Å–ª—ã—à–∞—Ç—å –æ–± –æ–ø—ã—Ç–µ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏—è —Å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è–º–∏ –¥–ª—è –∏–∑—É—á–µ–Ω–∏—è —è–∑—ã–∫–æ–≤. –ß—Ç–æ –ø–æ–Ω—Ä–∞–≤–∏–ª–æ—Å—å, –∏ —á–µ–≥–æ –Ω–µ —Ö–≤–∞—Ç–∞–ª–æ""",
    ]:
        print(text[:10], request_reaction_emojis_from_openai(text, limit=3))
        time.sleep(1)


if __name__ == "__main__":
    test()
