import datetime
import io
import os
import re

import pandas as pd

from dateutil.parser import parse as parse_date
from scipy import interpolate


# - Utils
def pd_read(input_obj, index_column=None, extension=None, **kwargs):
    if not extension:
        if ".zip" == input_obj[:-4]:
            extension = os.path.splitext(input_obj[:-4])[-1]
        else:
            extension = os.path.splitext(input_obj)[-1]

    if os.path.exists(input_obj):
        input_obj = input_obj
    else:
        input_obj = io.StringIO(input_obj)

    if extension == ".msgpack":
        from mbf_pandas_msgpack import read_msgpack

        df = read_msgpack(input_obj)
    else:
        df = getattr(pd, f"read_{extension[1:]}")(input_obj, **kwargs)
    if index_column:
        df = df.set_index(index_column)
    return df


def get_real_estate_estimator():
    # - Get prices samples
    # taken from here: https://msk.restate.ru/graph/ceny-prodazhi-kvartir/
    s = """30 июн. 2022	348995.1	+6.59%	367819.9	-2.53%
    17 июн. 2022	325993.4	+0.49%	377135.7	-3.29%
    06 июн. 2022	324389.4	+0.68%	389543.6	-0.56%
    20 мая 2022	322184.3	+0.32%	391723.2	+0.67%
    06 мая 2022	321143.8	-0.93%	389098.7	+2.24%
    21 апр. 2022	324135.6	+0.61%	380374.9	+1.89%
    11 апр. 2022	322157.3	-1.51%	373186.6	+2.96%
    24 мар. 2022	327029.7	+1.89%	362129.2	+1.61%
    10 мар. 2022	320858.3	-2.07%	356298.4	+2.53%
    24 фев. 2022	327512.5	+0.79%	347284.7	+2.71%
    11 фев. 2022	324933.2	+1.97%	337867.8	+0.72%
    28 янв. 2022	318543.7	+0.99%	335427.1	+1.92%
    14 янв. 2022	315393.2	+0.95%	328977	+0.48%
    30 дек. 2021	312398.5	+0.43%	327406.1	+0.97%
    19 дек. 2021	311050.4	-3.78%	324246.4	+1.17%
    03 дек. 2021	322818.2	+1.99%	320447.6	-0.43%
    19 ноя. 2021	316379.3	+4.71%	321822.3	+0.21%
    22 окт. 2021	301478.8	+1.45%	321134.7	+0.95%
    08 окт. 2021	297122.3	+0.43%	318091.4	+0.04%
    26 сен. 2021	295837.1	+2.31%	317960.5	-1.39%
    10 сен. 2021	288999.8	+1.92%	322370.2	-1.96%
    12 авг. 2021	283452.2	-0.04%	328691	+2.78%
    16 июл. 2021	283552.2	+2.8%	319563	-1.18%
    02 июл. 2021	275600.2	+2.34%	323321.3	-1.36%
    18 июн. 2021	269156.6	+6.51%	327724.1	-0.28%
    04 июн. 2021	251627.5	-3.43%	328638.1	-0.3%
    28 мая 2021	260270.75	-1.92%	329619.65	+7.06%
    25 апр. 2021	265260.75	+2.45%	306355.7	+0.2%
    09 апр. 2021	258768.47	+2.76%	305754.13	+2.99%
    05 мар. 2021	251629.35	-0.21%	296612.65	-0.09%
    04 мар. 2021	252148.3	+7.8%	296886.5	+2.97%
    05 фев. 2021	232473.1	-0.82%	288081.3	+0.03%
    30 янв. 2021	234376.8	+0.18%	288003.4	-1.53%
    15 янв. 2021	233947.7	+1.13%	292413	+0.21%
    31 дек. 2020	231301	+0.55%	291804.5	+0.82%
    18 дек. 2020	230038.8	-0.66%	289420.9	+1.49%
    04 дек. 2020	231566	-2.84%	285103.2	+1.11%
    20 ноя. 2020	238149.6	-11.78%	281935.7	-7.83%
    06 ноя. 2020	266209.65	+15.28%	304004.5	+6.58%
    23 окт. 2020	225533.9	+5.36%	283997.9	-1.56%
    10 окт. 2020	213450.9	-0.01%	288435	+0%
    09 окт. 2020	213467.1	+0.8%	288435	-4.73%
    25 сен. 2020	211761.2	+1.56%	302074.1	-0.17%
    24 сен. 2020	208451.5	+0.27%	302598.4	-8.31%
    11 сен. 2020	207896.95	-13.97%	327745.9	+2.86%
    28 авг. 2020	236944.87	+12.38%	318365.83	+6.29%
    14 авг. 2020	207604.9	+0.1%	298343.7	-0.1%
    13 авг. 2020	207395.9	-11.01%	298630.6	+3.3%
    31 июл. 2020	230224.33	+10.75%	288789.93	+6.66%
    18 июл. 2020	205466.3	+0.41%	269564.7	-0.34%
    17 июл. 2020	204632.4	-0.33%	270490.3	-6.91%
    03 июл. 2020	205298.85	+1.8%	289189.2	-6.92%
    19 июн. 2020	201612.85	-7.2%	309196.1	-6.24%
    05 июн. 2020	216128.8	+6.68%	328502.2	+1.63%
    22 мая 2020	201696.8	-11.49%	323145.7	-2.36%
    08 мая 2020	224873.9	+11.51%	330774.33	+5.93%
    23 апр. 2020	198988.5	+3.87%	311162.1	+2.56%
    10 апр. 2020	191282.3	+1.27%	303199.6	+1.56%
    27 мар. 2020	188860.3	-29.36%	298454.6	+0.48%
    26 мар. 2020	244318.6	+19.09%	297025.25	-0.97%
    06 мар. 2020	197668.1	-14.71%	299917.5	+1.28%
    20 фев. 2020	226749.93	+4.56%	296064	-18.44%
    06 фев. 2020	216406.7	+7.85%	350670.1	+10.33%
    23 янв. 2020	199422.8	+3.42%	314442.8	+3.53%
    09 янв. 2020	192605	+0.6%	303341.3	+2.72%
    26 дек. 2019	191446	+1.38%	295080.6	+16.51%
    12 дек. 2019	188810.4	+0.07%	246369.4	+0.43%
    28 ноя. 2019	188670.6	+0.44%	245319.8	+5.92%
    15 ноя. 2019	187833	-2.07%	230799.5	-0.99%
    31 окт. 2019	191719.8	-2.81%	233089.8	-0.71%
    17 окт. 2019	197103.9	+0.57%	234750.6	-4.91%
    03 окт. 2019	195980	-4.55%	246268.1	-0.14%
    19 сен. 2019	204895.2	+2.6%	246617.9	+5.01%
    05 сен. 2019	199576.6	+0.27%	234252.3	-9.07%
    22 авг. 2019	199034.1	+9.03%	255510.3	+1.47%
    08 авг. 2019	181070.4	-2.04%	251754.4	+6.79%
    25 июл. 2019	184764	-0.04%	234656.1	+0.67%
    11 июл. 2019	184843.7	+0.19%	233094.9	+0.47%
    27 июн. 2019	184489.1	+0.3%	231991.2	-3.83%
    13 июн. 2019	183939.1	-1.34%	240884.9	-1.6%
    30 мая 2019	186410	-1.54%	244728.6	+0.43%
    16 мая 2019	189280.9	+0.62%	243672.9	-0.76%
    02 мая 2019	188111.3	+3.62%	245517.3	+0.25%
    18 апр. 2019	181302.4	+0.03%	244891.3	-4.25%
    04 апр. 2019	181252.8	-1.78%	255293.9	+0.57%
    21 мар. 2019	184474.9	+0.48%	253846	+0.12%
    07 мар. 2019	183580.3	-15.87%	253548.5	-9.14%
    21 фев. 2019	212714.25	+12.65%	276722.8	+6.7%
    07 фев. 2019	185811.5	+3.01%	258169.1	+5.98%
    24 янв. 2019	180224.5	-0.5%	242735.2	-0.61%
    10 янв. 2019	181119.8	+1.62%	244227	+0.52%
    20 дек. 2018	178190.8	-1.69%	242963.7	+3.4%
    06 дек. 2018	181208.8	+2.28%	234706.9	-1.4%
    22 ноя. 2018	177080.1	+4.41%	237997.7	-2.21%
    08 ноя. 2018	169272.4	+2.28%	243268.8	+2.45%
    25 окт. 2018	165418.2	-4.58%	237305.2	+2.02%
    04 окт. 2018	172997.7	 	232521.7	 """

    for month_from, month_to in [
        ["янв.", "Jan"],
        ["фев.", "Feb"],
        ["мар.", "Mar"],
        ["апр.", "Apr"],
        ["мая", "May"],
        ["июн.", "Jun"],
        ["июл.", "Jul"],
        ["авг.", "Aug"],
        ["сен.", "Sep"],
        ["окт.", "Oct"],
        ["ноя.", "Nov"],
        ["дек.", "Dec"],
    ]:
        s = s.replace(month_from, month_to)

    # - Parse and format
    """ 
timestamp_in_days   price
19173	358407.50
19160	351564.55
19149	356966.50
19132	356953.75
19118	355121.25
...	...
17871	207957.85
17857	207538.90
17843	206270.60
17829	201361.70
17808	202759.70"""

    def _get_timestamp_in_days(dt):
        return int(dt.timestamp()) // (3600 * 24)

    df = pd_read(s, extension=".csv", sep="\t", header=None)
    df["price"] = (df[1] + df[3]) / 2
    df["date"] = df[0].apply(parse_date)
    df["timestamp_in_days"] = df["date"].apply(_get_timestamp_in_days)

    # - Interpolate
    x = df["timestamp_in_days"].values
    y = df["price"].values
    f = interpolate.interp1d(x, y, fill_value="extrapolate")

    # - Process reference value
    def res(dt, reference_value=None):
        if not reference_value:
            # stub - reference value is equal to index for some date
            reference_value = {"dt": df.iloc[0]["date"], "value": df.iloc[0]["price"]}
        reference_value = dict(reference_value)  # make a copy

        reference_value["dt"] = parse_date(reference_value["dt"])

        return (
            f(_get_timestamp_in_days(dt)) * reference_value["value"] / f(_get_timestamp_in_days(reference_value["dt"]))
        )

    return res


if __name__ == "__main__":
    estimator = get_real_estate_estimator()
    print(estimator(parse_date("2022.06.05")))
    print(estimator(parse_date("2022.06.06")))
    print(estimator(parse_date("2022.06.07")))
